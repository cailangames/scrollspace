// Code for the procedural map generation.

#ifndef _PROCEDURAL_GENERATION_H_
#define _PROCEDURAL_GENERATION_H_

#pragma bank 1

#include <gb/gb.h>
#include <stdint.h>

#define BIOME_COUNT 50
#define COLUMNS_PER_BIOME 20

#define BIOME_OPEN_AREA 0
#define BIOME_DOWNWARD_STRIPE 1
#define BIOME_UPWARD_STRIPE 2

// Struct to hold state data in between calls to `generate_next_column()`.
struct GenerationState {
  uint8_t biome_id;
  uint8_t biome_column_index;
};

// Generates the next column and writes the output to collision and background maps.
// Important: `coll_map` and `bkg_map` should be pointers to the first index of the column that
// should be generated.
extern void generate_next_column(struct GenerationState* gen_state, uint8_t* coll_map, uint8_t* bkg_map) BANKED;


static const uint8_t biome_columns[BIOME_COUNT][COLUMNS_PER_BIOME * 2] = {
    {7, 11, 7, 11, 5, 9, 5, 9, 7, 11, 7, 11, 7, 11, 7, 12, 7, 12, 7, 13, 9, 15, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 8, 14, 8, 14, 6, 12, 4, 10},
    {4, 10, 2, 8, 2, 8, 1, 7, 3, 9, 5, 11, 5, 11, 5, 11, 7, 13, 9, 15, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16},
    {10, 15, 8, 13, 10, 15, 8, 13, 8, 12, 6, 10, 4, 8, 4, 9, 4, 10, 4, 10, 6, 12, 8, 14, 8, 14, 8, 14, 10, 16, 8, 14, 8, 14, 10, 16, 10, 16, 10, 16},
    {10, 16, 10, 16, 8, 14, 6, 12, 4, 10, 4, 10, 6, 12, 4, 9, 2, 7, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 6, 1, 6, 3, 8, 5, 10},
    {5, 10, 3, 8, 5, 10, 5, 11, 5, 11, 5, 11, 3, 8, 3, 7, 3, 7, 3, 8, 3, 9, 3, 9, 1, 7, 3, 9, 5, 11, 7, 13, 5, 11, 5, 11, 3, 9, 5, 11},
    {3, 9, 5, 11, 5, 11, 5, 11, 5, 11, 3, 9, 1, 7, 1, 7, 3, 9, 5, 11, 5, 11, 7, 13, 7, 13, 9, 15, 9, 15, 9, 15, 9, 15, 7, 13, 7, 13, 7, 13},
    {9, 15, 9, 15, 10, 16, 8, 14, 8, 14, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 8, 14, 10, 16, 10, 16, 10, 16, 10, 16, 8, 14, 8, 14, 8, 14, 8, 14, 10, 16},
    {10, 16, 10, 16, 8, 14, 8, 14, 8, 14, 8, 13, 6, 11, 6, 12, 6, 12, 6, 12, 4, 10, 2, 8, 2, 8, 1, 7, 1, 7, 1, 7, 1, 6, 1, 6, 1, 6, 1, 6},
    {3, 8, 1, 6, 1, 6, 3, 9, 3, 9, 5, 11, 5, 11, 3, 9, 3, 9, 3, 8, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 3, 9, 1, 7, 1, 7},
    {3, 9, 3, 9, 1, 7, 1, 7, 1, 7, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 3, 9, 3, 9, 5, 11, 3, 9, 3, 8, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7},
    {1, 7, 1, 7, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 1, 7, 1, 7, 1, 7, 3, 9, 3, 9, 3, 9, 3, 9, 5, 11, 5, 11, 5, 11, 3, 9, 3, 9},
    {3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 1, 7, 3, 9, 3, 9, 5, 11, 5, 11, 5, 11, 5, 11, 7, 13, 9, 15, 7, 13, 9, 15, 9, 15, 10, 16, 10, 16},
    {10, 16, 10, 16, 8, 14, 6, 12, 8, 14, 6, 12, 4, 10, 4, 10, 6, 12, 6, 11, 4, 9, 6, 11, 6, 12, 4, 10, 2, 8, 2, 8, 4, 10, 6, 12, 8, 14, 8, 14},
    {8, 14, 8, 14, 10, 16, 10, 16, 8, 14, 6, 12, 8, 14, 10, 16, 10, 16, 10, 15, 10, 15, 8, 13, 8, 13, 8, 14, 8, 14, 6, 12, 6, 12, 4, 10, 2, 8, 4, 10},
    {4, 10, 2, 8, 1, 7, 1, 6, 1, 6, 3, 8, 3, 9, 5, 11, 3, 9, 3, 9, 5, 11, 7, 13, 7, 13, 7, 13, 5, 11, 3, 9, 3, 9, 1, 7, 1, 7, 1, 7},
    {1, 7, 1, 7, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 3, 9, 3, 8, 5, 10, 5, 11, 5, 10, 5, 11, 5, 11, 3, 9, 3, 9, 5, 11, 7, 13, 7, 13, 9, 15},
    {7, 13, 9, 15, 9, 15, 10, 16, 10, 16, 10, 16, 10, 16, 10, 15, 8, 13, 8, 13, 8, 14, 8, 14, 8, 13, 10, 15, 10, 16, 8, 14, 8, 14, 10, 16, 10, 16, 10, 16},
    {10, 16, 10, 16, 10, 16, 8, 14, 6, 12, 8, 14, 8, 14, 8, 14, 10, 16, 8, 14, 8, 14, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16},
    {8, 14, 8, 14, 6, 12, 6, 12, 4, 10, 4, 10, 4, 10, 6, 12, 6, 12, 6, 12, 6, 12, 6, 12, 4, 10, 4, 9, 4, 9, 6, 11, 6, 11, 6, 11, 4, 9, 4, 9},
    {4, 10, 6, 12, 6, 12, 6, 12, 6, 12, 6, 12, 4, 10, 6, 12, 4, 10, 4, 10, 2, 8, 1, 7, 1, 7, 3, 9, 3, 8, 5, 10, 7, 12, 7, 12, 9, 14, 10, 15},
    {10, 15, 10, 15, 10, 15, 10, 16, 10, 16, 8, 14, 8, 14, 8, 14, 10, 16, 8, 14, 10, 16, 10, 16, 10, 16, 8, 14, 6, 12, 4, 10, 6, 12, 6, 12, 8, 14, 10, 16},
    {8, 13, 8, 13, 6, 11, 4, 9, 6, 11, 6, 12, 4, 10, 4, 10, 4, 10, 6, 12, 4, 10, 4, 10, 6, 12, 6, 12, 6, 12, 4, 10, 4, 10, 2, 8, 1, 7, 1, 7},
    {1, 7, 1, 7, 1, 7, 1, 6, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 5, 9, 7, 11, 5, 9, 7, 11},
    {7, 11, 7, 11, 9, 14, 7, 12, 7, 12, 5, 10, 3, 8, 5, 10, 7, 12, 9, 14, 10, 16, 10, 16, 8, 14, 10, 16, 10, 16, 10, 16, 10, 16, 8, 14, 10, 16, 10, 16},
    {8, 14, 8, 14, 10, 16, 10, 16, 8, 14, 6, 12, 6, 12, 6, 12, 6, 12, 6, 12, 6, 12, 6, 12, 6, 12, 6, 12, 6, 12, 6, 12, 6, 12, 6, 12, 4, 10, 2, 8},
    {1, 7, 1, 7, 3, 9, 3, 9, 5, 11, 7, 13, 9, 15, 9, 15, 9, 15, 9, 15, 9, 15, 9, 15, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16},
    {10, 16, 10, 16, 8, 14, 8, 14, 6, 12, 8, 14, 8, 14, 8, 14, 6, 12, 6, 12, 6, 12, 6, 12, 4, 10, 4, 10, 4, 9, 6, 11, 6, 11, 8, 13, 6, 11, 4, 9},
    {4, 9, 2, 7, 2, 7, 2, 8, 2, 7, 2, 8, 4, 10, 6, 12, 6, 12, 8, 14, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 8, 14, 6, 12, 6, 12, 8, 14},
    {6, 12, 4, 10, 6, 12, 8, 14, 10, 16, 10, 16, 8, 14, 8, 14, 6, 12, 6, 12, 8, 14, 8, 14, 8, 14, 8, 14, 6, 12, 6, 12, 6, 12, 4, 10, 4, 10, 6, 12},
    {8, 14, 8, 14, 8, 14, 8, 14, 6, 12, 6, 12, 6, 12, 8, 14, 8, 14, 8, 14, 8, 14, 8, 14, 6, 12, 6, 12, 6, 12, 6, 12, 8, 14, 8, 14, 8, 14, 8, 14},
    {8, 14, 8, 14, 10, 16, 10, 16, 10, 16, 10, 16, 10, 15, 10, 14, 10, 15, 8, 13, 10, 16, 10, 16, 10, 16, 10, 15, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16},
    {8, 14, 8, 14, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 8, 14, 8, 14, 6, 12, 6, 12, 4, 10, 2, 8, 4, 10, 6, 12, 6, 12, 6, 12, 6, 12, 8, 14},
    {8, 14, 8, 14, 8, 14, 10, 16, 8, 14, 6, 12, 4, 10, 6, 12, 4, 10, 6, 12, 6, 12, 6, 12, 6, 11, 6, 11, 6, 12, 4, 10, 4, 10, 4, 10, 4, 10, 4, 10},
    {4, 10, 4, 10, 2, 8, 2, 8, 2, 8, 2, 8, 2, 8, 2, 8, 1, 7, 3, 9, 5, 11, 7, 13, 7, 13, 9, 15, 9, 14, 7, 12, 7, 13, 9, 15, 9, 15, 9, 15},
    {7, 13, 7, 13, 7, 13, 5, 11, 5, 11, 7, 13, 7, 12, 7, 13, 7, 12, 5, 10, 7, 12, 5, 10, 3, 8, 5, 10, 7, 12, 5, 10, 5, 10, 5, 11, 3, 9, 5, 11},
    {3, 9, 3, 9, 3, 9, 1, 7, 1, 6, 3, 8, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 3, 9, 3, 9, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7},
    {1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 3, 9, 3, 9, 5, 11, 5, 11, 5, 11, 3, 9},
    {3, 9, 3, 9, 3, 9, 3, 9, 5, 11, 7, 13, 9, 15, 10, 16, 10, 15, 10, 15, 8, 13, 10, 15, 10, 15, 10, 15, 10, 16, 8, 14, 10, 16, 10, 16, 10, 16, 10, 16},
    {10, 16, 10, 16, 10, 16, 8, 14, 8, 14, 8, 14, 8, 14, 6, 12, 4, 10, 4, 10, 6, 11, 6, 11, 4, 9, 2, 7, 2, 7, 2, 8, 1, 7, 1, 7, 1, 7, 1, 7},
    {3, 9, 3, 9, 5, 11, 3, 9, 3, 9, 1, 7, 1, 7, 1, 6, 1, 6, 1, 6, 1, 6, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 1, 7, 1, 7},
    {3, 9, 1, 7, 3, 9, 5, 11, 3, 9, 5, 11, 7, 13, 9, 15, 9, 15, 10, 15, 8, 13, 8, 14, 8, 14, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16},
    {10, 16, 8, 14, 8, 14, 10, 16, 8, 14, 6, 12, 6, 12, 8, 14, 6, 12, 6, 12, 6, 12, 4, 10, 4, 10, 4, 10, 4, 9, 6, 11, 6, 12, 8, 14, 8, 14, 6, 12},
    {8, 14, 6, 12, 8, 14, 8, 14, 8, 14, 8, 14, 10, 16, 10, 16, 8, 14, 8, 13, 10, 15, 8, 13, 8, 13, 8, 14, 10, 16, 8, 14, 8, 14, 8, 14, 6, 12, 6, 11},
    {4, 9, 6, 11, 4, 9, 6, 11, 6, 12, 4, 10, 6, 12, 6, 12, 6, 12, 6, 12, 4, 10, 4, 10, 6, 12, 8, 14, 8, 14, 8, 14, 8, 13, 8, 13, 8, 13, 8, 14},
    {8, 14, 8, 14, 8, 14, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 8, 14, 8, 14, 6, 12, 6, 12, 4, 10, 2, 8, 4, 10, 4, 10, 4, 10, 4, 10, 6, 12, 6, 12},
    {8, 14, 8, 14, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 8, 14, 8, 14, 10, 16, 10, 16, 10, 15, 10, 15, 10, 15, 10, 15, 10, 15, 10, 15, 10, 15, 8, 13, 8, 14},
    {8, 13, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 10, 16, 8, 14, 6, 12, 6, 12, 6, 12, 4, 10, 6, 12, 6, 12, 4, 10, 4, 10, 4, 10, 6, 12, 8, 14, 8, 14},
    {6, 12, 6, 12, 6, 12, 6, 12, 6, 12, 8, 14, 8, 14, 8, 14, 6, 12, 8, 14, 8, 14, 8, 14, 6, 12, 6, 12, 6, 12, 6, 12, 4, 10, 2, 8, 1, 7, 3, 9},
    {3, 9, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 3, 9, 1, 7, 3, 9, 3, 9, 5, 11, 5, 10, 7, 12, 5, 10, 3, 8, 5, 10, 3, 8, 3, 9},
    {3, 9, 5, 11, 3, 9, 3, 9, 5, 11, 5, 11, 5, 11, 5, 11, 5, 11, 7, 13, 5, 11, 5, 11, 5, 11, 3, 9, 3, 9, 5, 11, 5, 11, 5, 11, 5, 11, 5, 11}
};
static const uint8_t next_possible_biomes[BIOME_COUNT][1] = {
{1},
{2},
{3},
{4},
{5},
{6},
{7},
{8},
{9},
{10},
{11},
{12},
{13},
{14},
{15},
{16},
{17},
{18},
{19},
{20},
{21},
{22},
{23},
{24},
{25},
{26},
{27},
{28},
{29},
{30},
{31},
{32},
{33},
{34},
{35},
{36},
{37},
{38},
{39},
{40},
{41},
{42},
{43},
{44},
{45},
{46},
{47},
{48},
{49},
{0}
};



#endif
